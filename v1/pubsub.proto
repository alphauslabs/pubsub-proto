syntax = "proto3";

package pubsubproto;

option go_package = "github.com/alphauslabs/pubsubproto";

// PubSubService defines methods for publishing and subscribing to messages
service PubSubService {
  // Publish a message to a topic
  rpc Publish(Message) returns (PublishResponse) {}

  // Subscribe to a topic and receive messages
  rpc Subscribe(SubscribeRequest) returns (stream Message) {}

  // Acknowledge receipt of a message
  rpc Acknowledge(AcknowledgeRequest) returns (AcknowledgeResponse) {}

  // Modify the visibility timeout of a message
  rpc ModifyVisibilityTimeout(ModifyVisibilityTimeoutRequest) returns (ModifyVisibilityTimeoutResponse) {}
}

// Topic represents a topic in the pub/sub system
message Topic {
  string id = 1;
  string name = 2;
}

// Subscription represents a subscription to a topic
message Subscription {
  string id = 1;
  string name = 2;
  string topic_id = 3;
  int32 visibility_timeout = 4;
}

// Message represents a pub/sub message
message Message {
  string id = 1;
  string topic = 2;
  bytes payload = 3;
  // int64 created_at = 4; 
  // int64 updated_at = 5;
}

// Response for Publish RPC
message PublishResponse {
  string message_id = 1;
}

// Request to subscribe to a topic
message SubscribeRequest {
  string subscription_id = 1;
  int32 visibility_timeout = 2;
}

// Request to acknowledge a received message
message AcknowledgeRequest {
  string subscription_id = 1;
  string message_id = 2;
}

// Response for Acknowledge RPC
message AcknowledgeResponse {
  bool acknowledge = 1;
}

// Request to modify the visibility timeout of a message
message ModifyVisibilityTimeoutRequest {
  string message_id = 1;
  int32 new_timeout = 2;
}

// Response for ModifyVisibilityTimeout RPC
message ModifyVisibilityTimeoutResponse {
  bool success = 1;
}
