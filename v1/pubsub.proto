syntax = "proto3";

package pubsubproto;

option go_package = "github.com/alphauslabs/pubsubproto";
import "google/protobuf/timestamp.proto";

//Service for Pub/Sub
service PubSubService {

  // crud-topic
  rpc CreateTopic(CreateTopicRequest) returns (Topic) {}
  rpc GetTopic(GetTopicRequest) returns (Topic) {}
  rpc UpdateTopic(UpdateTopicRequest) returns (Topic) {}
  rpc DeleteTopic(DeleteTopicRequest) returns (DeleteTopicResponse) {}
  rpc ListTopics(Empty) returns (ListTopicsResponse) {}

  // crud-subscription
  rpc CreateSubscription(CreateSubscriptionRequest) returns (Subscription) {}
  rpc GetSubscription(GetSubscriptionRequest) returns (Subscription) {}
  rpc UpdateSubscription(UpdateSubscriptionRequest) returns (Subscription) {}
  rpc DeleteSubscription(DeleteSubscriptionRequest) returns (DeleteSubscriptionResponse) {}
  rpc ListSubscriptions(Empty) returns (ListSubscriptionsResponse) {}

  // pub sub operations
  rpc Publish(PublishRequest) returns (PublishResponse) {}
  rpc Subscribe(SubscribeRequest) returns (stream Message) {}
  rpc Acknowledge(AcknowledgeRequest) returns (AcknowledgeResponse) {}
  rpc ModifyVisibilityTimeout(ModifyVisibilityTimeoutRequest) returns (ModifyVisibilityTimeoutResponse) {}

  // Leader Config Operations - for leaderconfig communication
  rpc GetLeaderConfig(GetLeaderConfigRequest) returns (LeaderConfig) {}
}

// --- Topic Definitions ---
message Topic {
  string id = 1;    // Unique ID for the topic
  string name = 2;  // Human-readable name for the topic
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message CreateTopicRequest {
  string name = 1;        // Name of the topic to create
}

message GetTopicRequest {
  string id = 1;          // ID of the topic to retrieve
}

message UpdateTopicRequest {
  string id = 1;          // ID of the topic to update
  string new_name = 2;    // New name for the topic
}

message DeleteTopicRequest {
  string id = 1;          // ID of the topic to delete
}

message DeleteTopicResponse {
  bool success = 1;       // Indicates if the deletion was successful
}

message ListTopicsResponse {
  repeated Topic topics = 1; // List of all topics
}

// --- Subscription Definitions ---
message Subscription {
  string id = 1;                // Unique ID for the subscription
  string topic_id = 2;          // ID of the topic this subscription belongs to
  int32 visibility_timeout = 3; // Default visibility timeout (in seconds)
}

message CreateSubscriptionRequest {
  string topic_id = 1;                 // ID of the topic to subscribe to
  int32 visibility_timeout = 2;       // Default visibility timeout (in seconds)
  string id = 3;                      // ID of the subscription
}

message GetSubscriptionRequest {
  string id = 1;                        // ID of the subscription to retrieve
}

message UpdateSubscriptionRequest {
  string id = 1;                       // ID of the subscription to update
  int32 modify_visibility_timeout = 2; // New visibility timeout (in seconds)
}

message DeleteSubscriptionRequest {
  string id = 1;                // ID of the subscription to delete
}

message DeleteSubscriptionResponse {
  bool success = 1;             // Indicates if the deletion was successful
  google.protobuf.Timestamp deleted_at = 2;
}

message ListSubscriptionsResponse {
  repeated Subscription subscriptions = 1; // List of all subscriptions
}

// --- Pub/Sub Message Definitions ---
message Message {
  string id = 1;                      // Unique ID for the message
  string payload = 2;                 // Content of the message
  string topic = 3;                 // Topic this message belongs to
  ModifyVisibilityTimeoutRequest modify_visibility_timeout = 4; // Request to modify the visibility timeout
  bool processed = 5;                 // Indicates if the message has been processed
}

message PublishRequest {
  string topic_id = 1;                // ID of the topic to publish to
  string payload = 2;                 // Content of the message to publish
}

message PublishResponse {
  string message_id = 1;              // ID of the published message
}

message SubscribeRequest {
  string subscription_id = 1;         // ID of the subscription to pull messages from
  string topic_id = 2;                // ID of the topic to pull messages from
}

message AcknowledgeRequest {
  string subscription_id = 1;         // ID of the subscription
  string id = 2;                      // ID of the message to acknowledge
}

message AcknowledgeResponse {
  bool success = 1;                   // Indicates if the acknowledgment was successful
}

message ModifyVisibilityTimeoutRequest {
  string id = 1;                     // ID of the message to modify
  int32 new_timeout = 2;              // New visibility timeout (in seconds)
}

message ModifyVisibilityTimeoutResponse {
  bool success = 1;                   // Indicates if the modification was successful
}

// --- LeaderConfig Definitions ---
message LeaderConfig {
  string id = 1;
  string ip_address = 2;
  google.protobuf.Timestamp last_seen = 3;
}

message GetLeaderConfigRequest {
  string id = 1;
}

//  --- Empty Message ---
message Empty {}
